@import "./googleFonts";
@import "./googleIcons";
@import "./utils";

body {
  --fg-clr: #{$fg-clr};
  --bg-clr: #{$bg-clr};
  --accent-clr: #{$accent};
  --dark-accent-clr: #{$dark-accent};
  --highlight: #{$highlight};
  --success: #{$traffic-green};
  --pending: #{$traffic-yellow};
  --error: #{$traffic-red};
  --loading-screen: #{$loading-screen};
  @for $i from 1 through length($rainbow) {
    --rainbow#{$i}: #{nth($rainbow, $i)};
  }
  @for $i from 1 through length($rainbow2) {
    --rainbow2-#{$i}: #{nth($rainbow2, $i)};
  }
  @for $i from 1 through length($rainbow3) {
    --rainbow3-#{$i}: #{nth($rainbow3, $i)};
  }
  --accent-clr-rgb: #{red($accent-rgb)}, #{green($accent-rgb)}, #{blue($accent-rgb)};
}
@mixin fauxShadow {
  text-shadow:
    calc(var(--stroke-width, 1px) * 1) calc(var(--stroke-width, 1px) * 0) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * 0.9239) calc(var(--stroke-width, 1px) * 0.3827) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * 0.7071) calc(var(--stroke-width, 1px) * 0.7071) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * 0.3827) calc(var(--stroke-width, 1px) * 0.9239) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * 0) calc(var(--stroke-width, 1px) * 1) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * -0.3827) calc(var(--stroke-width, 1px) * 0.9239) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * -0.7071) calc(var(--stroke-width, 1px) * 0.7071) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * -0.9239) calc(var(--stroke-width, 1px) * 0.3827) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * -1) calc(var(--stroke-width, 1px) * 0) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * -0.9239) calc(var(--stroke-width, 1px) * -0.3827) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * -0.7071) calc(var(--stroke-width, 1px) * -0.7071) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * -0.3827) calc(var(--stroke-width, 1px) * -0.9239) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * 0) calc(var(--stroke-width, 1px) * -1) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * 0.3827) calc(var(--stroke-width, 1px) * -0.9239) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * 0.7071) calc(var(--stroke-width, 1px) * -0.7071) 0 var(--stroke-color, #000000),
    calc(var(--stroke-width, 1px) * 0.9239) calc(var(--stroke-width, 1px) * -0.3827) 0 var(--stroke-color, #000000);
}

.all { --stroke: #{$all}; }
.stills,
.image { --stroke:   #{$image}; }
.embeds,
.media { --stroke:  #{$media}; }
.words,
.text  { --stroke: #{$text}; }
.hyperlinks,
.other,
.link  { --stroke: #{$link}; }

.good { color: var(--success); }
.bad { color: var(--error); }
.wait { color: var(--pending); }
.highlighted { color: var(--highlight); }

.truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.no-wrap {
  white-space: nowrap;
}

.locale-number {
  font-family: 'Fira Sans';
  font-variant-numeric: tabular-nums;
}


@keyframes spiral {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}
:root {
  scroll-behavior: smooth;
}
html,
body {
  all: unset;
  margin: 0;
  padding: 0;
  width: 100vw;
  height: 100vh;
  font-family: 'Abel';
  font-size: 16px;
  font-weight: 400;
  line-height: 1.2em;
}
html,
body,
body * {
  position: relative;
  box-sizing: border-box;
}
body {
  background-color: var(--bg-clr, #{$bg-clr});
  color: var(--fg-clr, #{$fg-clr});
  overflow: hidden;
  grid-gap: 1rem;
  padding: 1rem;
}
body,
.as-grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(12, 1fr);
  align-items: stretch;
  justify-content: stretch;
}
.as-table {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-auto-rows: max-content;
  align-items: stretch;
  justify-content: stretch;
}
.hide { display: none !important; }
.show { display: inline-block !important; }
.loading,
[data-loading="true"] {
  --sz: 32px;
  --theme: white;
  position: relative;
  min-height: calc(var(--sz) * 2);

  &::before,
  &::after {
    content: "";
    position: var(--position, absolute);
  }
  &::before {
    z-index: 10;
    top: var(--top, 0);
    left: var(--left, 0);
    width: var(--width, 100%);
    height: var(--height, 100%);
    background-color: var(--loading-screen);
  }
  &::after {
    z-index: 11;
    height: var(--sz, 48px);
    width: var(--sz, 48px);
    margin: calc((var(--sz, 48px) - 2px) / -2) 0 0 calc((var(--sz, 48px) - 2px) / -2);
    border-radius: 50%;
    top: var(--centerY, 50%);
    left: var(--centerX, 50%);
    transform-origin: center center;
    border: 2px solid var(--rainbow5, #{$accent});
    animation: spinning-coin 2.4s cubic-bezier(0, 0.2, 0.8, 1) infinite;
  }
}
@keyframes spinning-coin {
  0%, 100% {
    animation-timing-function: cubic-bezier(0.5, 0, 1, 0.5);
  }
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(1800deg);
    animation-timing-function: cubic-bezier(0, 0.5, 0.5, 1);
  }
  100% {
    transform: rotateY(3600deg);
  }
}
@keyframes rotate {
  from { transform: rotate(-45deg); }
  to { transform: rotate(315deg); }
}
body > * { margin: 4px; }
pre,
code {
  font-family: 'Source Code Pro', 'Courier New';
}
main {
  overflow: hidden;
}
details {
  summary {
    outline: none;
    cursor: pointer;
  }
}
a {
  --color: var(--dark-accent-clr);
  --hover-color: var(--accent-clr);
  &:link,
  &:visited {
    color: var(--color);
  }
  &:active,
  &:hover,
  &:visited:active,
  &:visited:hover {
    color: var(--hover-color);
  }
  &:link,
  &:active,
  &:visited,
  &:hover {
    text-decoration: none;
  }
}

.primary {
  --btn-bg: darkcyan;
  --btn-fg: white;

  &.danger {
    --btn-bg: maroon;
    --btn-fg: white;

    &:hover {
      --btn-bg: red;
      --btn-fg: black;
    }
  }

  &:hover {
    --btn-bg: cyan;
    --btn-fg: black;
  }
}